* {
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* 宽度和高度包括了内边距（padding）和边框（border），
    内容区域的宽度和高度会自动减小以适应这些内边距和边框 */
  font-family: Verdana, Geneva, Tahoma, sans-serif;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #0f0f0f;
  overflow: hidden;
}

.container {
  position: relative; /* 使图片重叠在一起， 父元素相对定位 */
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.container .card {
  position: absolute; /* 使图片重叠在一起， 子元素绝对定位 */
  width: 240px;
  height: 360px;
  background-color: #5e5cfc;
  border-radius: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: rgba(0, 0, 0, 0); /* 完全透明 */
  font-size: 8em;
  font-weight: 700; /* bold */
  border: 10px solid rgba(0, 0, 0, 0.1);
  transition: 0.5s;
  transform-origin: 50% 100%; /* 调整旋转中心点 两个数值100%相当与代表的是横向最右边，纵向最下边 */
  filter: hue-rotate(calc(var(--i) * 60deg)); /* 调整(旋转)色相 */
  box-shadow: 0 15px 50px rgba(0, 0, 0, 0.1);
}

.container:hover .card {
  transform: rotate(calc(var(--i) * 5deg))
    translate(calc(var(--i) * 120px), -50px); /* 向右向下位移（移动） */
  box-shadow: 0 15px 50px rgba(0, 0, 0, 0.25);
  color: rgba(0, 0, 0, 0.25); /* 半透明 */
  cursor: pointer;
}

.container:active .card:not(:active) {
  /* 一张卡片被激活后，暗淡其他卡片的颜色 */
  background-color: #333;
}

.container .card:hover {
  /* 点一张牌就升起来 */
  translate: calc(var(--i) * 20px) -100px;
  z-index: 999; /* 调整层级出现在最上面   specifies the stack order of an element.*/
}
